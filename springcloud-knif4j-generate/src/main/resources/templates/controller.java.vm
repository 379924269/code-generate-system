package ${package.Controller};

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import javax.annotation.Resource;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.*;
import org.apache.commons.lang3.StringUtils;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.dnp.common.api.CommonResult;
import com.dnp.common.domain.ResPage;

import ${package.Entity}.${entity};
import ${package.Service}.${table.serviceName};
import ${cfg.commonPageVo}.PageVo;
import ${cfg.commonPageVo}.IdVo;

import java.time.LocalDateTime;
##判断是否是要引入date包
#foreach($field in ${table.fields})
    #if(${field.propertyType.equals("Date")})
        #set($hasDateType = "hasDateType")
    #else
        #set($hasDateType = "noDateType")
    #end
#end
#if(${hasDateType.equals("hasDateType")})
import java.util.Date;
#end

/**
 * <p>
 * ${table.comment}  接口
 * </p>
 * @author ${author}
 * @since ${date}
 */
@Api(value = "${table.controllerName}", tags = "webui_${table.comment}API")
@RestController
@RequestMapping(value = "#if(${package.ModuleName})/${package.ModuleName}#end/${table.entityPath}", produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end
@Resource private ${table.serviceName} ${table.entityPath}Service;

##${table.entityPath} 表字段的小写
@RequestMapping(value = "", method = RequestMethod.GET)
@ApiOperation(value = "查询所有${table.comment}")
public CommonResult<ResPage<${entity}>> findAll(PageVo pageVo,
@ApiParam(name = "search", value = "模糊查询字段") @RequestParam(required = false) String search){
        Page<${entity}> page=new Page(pageVo.getOffset(),pageVo.getLimit());
        page.setOrders(PageVo.getOrderItemList(pageVo));
        QueryWrapper<${entity}> queryWrapper=new QueryWrapper<>();
        if(StringUtils.isNotEmpty(search)){
        queryWrapper.lambda().like(${entity}::getId,search);
        }
        IPage<${entity}> page1 = ${table.entityPath}Service.page(page,queryWrapper);
        return CommonResult.success(new ResPage<>(page1.getRecords(), page1.getTotal()));
}

@RequestMapping(value = "/{id}", method = RequestMethod.GET)
@ApiOperation(value = "查询${table.comment}详情", httpMethod = "GET")
public CommonResult<${entity}> findById(@ApiParam(name = "id", value = "${table.comment}id", required = true) @PathVariable("id") Integer id){
        return CommonResult.success(${table.entityPath}Service.getById(id));
        }

@RequestMapping(value = "/{id}", method = RequestMethod.PUT)
@ApiOperation(value = "通过id修改${table.comment}")
public CommonResult updateById(@ApiParam(name = "id", value = "${table.comment}id", required = true) @PathVariable("id") Integer id,
#foreach($field in ${table.fields})
    #set($lastField= ${field.propertyName})
#end

#foreach($field in ${table.fields})
    #if( ${field.propertyName.equals("id")})
    #else @ApiParam(name = "${field.propertyName}", value = "${field.comment}") @RequestParam(required = false, name = "${field.propertyName}") ${field.propertyType} ${field.propertyName}#if(${lastField} != ${field.propertyName})

            ,#end#end
#end){
${entity} ${table.entityPath} =new ${entity}(#foreach($field in ${table.fields})
    #set($lastField= ${field.propertyName})
#end
#foreach($field in ${table.fields})${field.propertyName}#if(${lastField} != ${field.propertyName}),#end#end);

${table.entityPath}Service.updateById(${table.entityPath});
        return CommonResult.success();
}

@RequestMapping(value = "", method = RequestMethod.POST)
@ApiOperation(value = "添加${table.comment}", response = IdVo.class)
public CommonResult<Integer> save(
#foreach($field in ${table.fields})
    #set($lastField= ${field.propertyName})
#end
#foreach($field in ${table.fields})
    #if( ${field.propertyName.equals("id")})
    #else @ApiParam(name = "${field.propertyName}", value = "${field.comment}") @RequestParam(required = false, name = "${field.propertyName}") ${field.propertyType} ${field.propertyName}#if(${lastField} != ${field.propertyName})

            ,#end#end#end){
## 这里是设置一个最后一个字段， 用来判断是否添加逗号
${entity} ${table.entityPath} =new ${entity}(#foreach($field in ${table.fields})
    #set($lastField= ${field.propertyName})
#end
#foreach($field in ${table.fields})
    #if(${field.propertyName.equals("id")})#else${field.propertyName}#if(${lastField} != ${field.propertyName}),#end#end#end);
${table.entityPath}Service.save(${table.entityPath});
        return CommonResult.success(${table.entityPath}.getId());
}

@RequestMapping(value = "/{id}", method = RequestMethod.DELETE)
@ApiOperation(value = "删除${table.comment}")
public CommonResult deleteById(@ApiParam(name = "id", value = "${table.comment}id", required = true) @PathVariable("id") Integer id){
    ${table.entityPath}Service.removeById(id);
        return CommonResult.success();
}

}
